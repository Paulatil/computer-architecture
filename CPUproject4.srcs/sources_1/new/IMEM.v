module IMem (PC_addr,Instruct, clk);

input clk;
input [15:0] PC_addr;
 reg [15:0] IM[0:15];
 output reg [15:0] Instruct;
 
 initial
 begin
 IM[0] <= 16'b0000100101010000;
 IM[1] <= 16'b0000100101011001;
 IM[2] <= 16'b0110010011000010;
 IM[3] <= 16'b0100110010000000;
 IM[4] <= 16'b0001100011001010;
 IM[5] <= 16'b0100110011000001;
 IM[6] <= 16'b0000010011110011;
 IM[7] <= 16'b0100000110000011;
 IM[8] <= 16'b0000100101010111;
 IM[9] <= 16'b0011000011000001;
 IM[11] <= 16'b0010100011001010;
 IM[10] <= 16'b0101011100000010;
 IM[12] <= 16'b0000011100010010;
 IM[13] <= 16'b1000110011001010;
 IM[14] <= 16'b0100000011000100;
 IM[15] <= 16'b1111000000000000;
 end
 
 always @ (posedge clk)
 begin
  Instruct <= IM[PC_addr];
 end
 endmodule
